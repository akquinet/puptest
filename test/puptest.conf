[default]

########################
### change detection ###
########################
repo_url=/tmp/puptest_base
## where to put the temporary clone for change detection (must not be your puppetmaster confdir)
destination_dir=/tmp
repo_name_in_destination=puptest_analysis

#path_to_root_pp=manifests
#root_pp_file_name=site.pp
## all files with this suffix will be checked for changes
#file_suffix=.pp
#modules_dir=modules

## the branch which contains the latest commits i.e. is usually a bit ahead of 
## the promoted reference
#dev_branch=master
## tag name to mark latest promoted code state
#promoted_ref=promoted
## change_set_branch is an orphan branch inside the puppetmaster repository
## that documents the test and promotion steps in form of json files containing
## the change set of each successful puptest run.
#change_set_branch=ppt_change_sets

## parent directory into which puptest checks out the repository containing
## the puppetmaster code to perform analysis on it. this should be a different
## directory than the puppet $confdir, which is usually /etc/puppet.
#destination_dir=/tmp

###############
### vm pool ###
###############
#pool_size=3
#vm_engine=kvm
#vm_host_login=root
## possible levels are 'system' and 'session' (see virsh documentation for details)
#vm_level=system
#vm_host_url=localhost
#vm_network_for_ssh=default
#vm_host_interface=virbr0
#vm_host_mac_ip_map_file=/var/log/daemon.log

#vm_name_prefix=puptest_
#base_vm=puptest_base
## vol_pool_path must be added via virsh pool-create-as as a volume pool
#vol_pool_path='/tmp'
vol_pool_path='/opt/kvm'
#vol_file_suffix=.qocw2
#init_snapshot_name=puptest_init_state
## pool vm identity file is required for key-based ssh login into the pool vms
## if you do not use the sample base vm as your base vm, you have to add the
## corresponding public key to /root/.ssh/authorized_keys in your base vm
pool_vm_identity_file=../../test/vmpool/puptest-base_rsa

## a callback server is started each time a pool vm is started to ensure the vm 
## is fully booted and are only added to the pool after they have been booted 
## properly. a pool vm has a manipulated /etc/rc.local script which runs a small
## ruby script. this ruby script sends a message to the callback server. this 
## message terminates the callback server instance. the callback server runs in 
## blocking mode, so it is ensured that all vms start sequentially.
## the callback server address depends on the network settings of your vm_pool_engine.
#callback_server_ip=192.168.122.1
#callback_server_port=2828

######################
### test execution ###
######################

## the server address depends on the network settings of your vm_pool_engine
puppetmaster_server=192.168.122.1